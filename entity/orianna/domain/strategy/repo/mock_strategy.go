// Code generated by MockGen. DO NOT EDIT.
// Source: strategy.go

// Package repo is a generated GoMock package.
package repo

import (
	reflect "reflect"

	agg "github.com/blackhorseya/monorepo-go/entity/orianna/domain/strategy/agg"
	contextx "github.com/blackhorseya/monorepo-go/pkg/contextx"
	gomock "go.uber.org/mock/gomock"
)

// MockIStrategyRepo is a mock of IStrategyRepo interface.
type MockIStrategyRepo struct {
	ctrl     *gomock.Controller
	recorder *MockIStrategyRepoMockRecorder
}

// MockIStrategyRepoMockRecorder is the mock recorder for MockIStrategyRepo.
type MockIStrategyRepoMockRecorder struct {
	mock *MockIStrategyRepo
}

// NewMockIStrategyRepo creates a new mock instance.
func NewMockIStrategyRepo(ctrl *gomock.Controller) *MockIStrategyRepo {
	mock := &MockIStrategyRepo{ctrl: ctrl}
	mock.recorder = &MockIStrategyRepoMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockIStrategyRepo) EXPECT() *MockIStrategyRepoMockRecorder {
	return m.recorder
}

// Create mocks base method.
func (m *MockIStrategyRepo) Create(ctx contextx.Contextx, data agg.Strategy) (string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Create", ctx, data)
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Create indicates an expected call of Create.
func (mr *MockIStrategyRepoMockRecorder) Create(ctx, data interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Create", reflect.TypeOf((*MockIStrategyRepo)(nil).Create), ctx, data)
}

// Get mocks base method.
func (m *MockIStrategyRepo) Get(ctx contextx.Contextx, id string) (agg.Strategy, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Get", ctx, id)
	ret0, _ := ret[0].(agg.Strategy)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Get indicates an expected call of Get.
func (mr *MockIStrategyRepoMockRecorder) Get(ctx, id interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Get", reflect.TypeOf((*MockIStrategyRepo)(nil).Get), ctx, id)
}
