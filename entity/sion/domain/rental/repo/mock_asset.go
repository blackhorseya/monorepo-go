// Code generated by MockGen. DO NOT EDIT.
// Source: asset.go

// Package repo is a generated GoMock package.
package repo

import (
	reflect "reflect"

	agg "github.com/blackhorseya/monorepo-go/entity/sion/domain/rental/agg"
	contextx "github.com/blackhorseya/monorepo-go/pkg/contextx"
	gomock "go.uber.org/mock/gomock"
)

// MockIAssetRepo is a mock of IAssetRepo interface.
type MockIAssetRepo struct {
	ctrl     *gomock.Controller
	recorder *MockIAssetRepoMockRecorder
}

// MockIAssetRepoMockRecorder is the mock recorder for MockIAssetRepo.
type MockIAssetRepoMockRecorder struct {
	mock *MockIAssetRepo
}

// NewMockIAssetRepo creates a new mock instance.
func NewMockIAssetRepo(ctrl *gomock.Controller) *MockIAssetRepo {
	mock := &MockIAssetRepo{ctrl: ctrl}
	mock.recorder = &MockIAssetRepoMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockIAssetRepo) EXPECT() *MockIAssetRepoMockRecorder {
	return m.recorder
}

// FetchAvailableCars mocks base method.
func (m *MockIAssetRepo) FetchAvailableCars(ctx contextx.Contextx) ([]*agg.Asset, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "FetchAvailableCars", ctx)
	ret0, _ := ret[0].([]*agg.Asset)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// FetchAvailableCars indicates an expected call of FetchAvailableCars.
func (mr *MockIAssetRepoMockRecorder) FetchAvailableCars(ctx interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "FetchAvailableCars", reflect.TypeOf((*MockIAssetRepo)(nil).FetchAvailableCars), ctx)
}
