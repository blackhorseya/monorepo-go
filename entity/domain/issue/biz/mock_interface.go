// Code generated by MockGen. DO NOT EDIT.
// Source: interface.go

// Package biz is a generated GoMock package.
package biz

import (
	reflect "reflect"

	model "github.com/blackhorseya/monorepo-go/entity/domain/issue/model"
	contextx "github.com/blackhorseya/monorepo-go/pkg/contextx"
	gomock "go.uber.org/mock/gomock"
)

// MockIIssueBiz is a mock of IIssueBiz interface.
type MockIIssueBiz struct {
	ctrl     *gomock.Controller
	recorder *MockIIssueBizMockRecorder
}

// MockIIssueBizMockRecorder is the mock recorder for MockIIssueBiz.
type MockIIssueBizMockRecorder struct {
	mock *MockIIssueBiz
}

// NewMockIIssueBiz creates a new mock instance.
func NewMockIIssueBiz(ctrl *gomock.Controller) *MockIIssueBiz {
	mock := &MockIIssueBiz{ctrl: ctrl}
	mock.recorder = &MockIIssueBizMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockIIssueBiz) EXPECT() *MockIIssueBizMockRecorder {
	return m.recorder
}

// CompletedTodoByID mocks base method.
func (m *MockIIssueBiz) CompletedTodoByID(ctx contextx.Contextx, id uint64) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CompletedTodoByID", ctx, id)
	ret0, _ := ret[0].(error)
	return ret0
}

// CompletedTodoByID indicates an expected call of CompletedTodoByID.
func (mr *MockIIssueBizMockRecorder) CompletedTodoByID(ctx, id interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CompletedTodoByID", reflect.TypeOf((*MockIIssueBiz)(nil).CompletedTodoByID), ctx, id)
}

// CreateTodo mocks base method.
func (m *MockIIssueBiz) CreateTodo(ctx contextx.Contextx, title string) (*model.Ticket, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateTodo", ctx, title)
	ret0, _ := ret[0].(*model.Ticket)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// CreateTodo indicates an expected call of CreateTodo.
func (mr *MockIIssueBizMockRecorder) CreateTodo(ctx, title interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateTodo", reflect.TypeOf((*MockIIssueBiz)(nil).CreateTodo), ctx, title)
}

// ListTodos mocks base method.
func (m *MockIIssueBiz) ListTodos(ctx contextx.Contextx) ([]*model.Ticket, int, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ListTodos", ctx)
	ret0, _ := ret[0].([]*model.Ticket)
	ret1, _ := ret[1].(int)
	ret2, _ := ret[2].(error)
	return ret0, ret1, ret2
}

// ListTodos indicates an expected call of ListTodos.
func (mr *MockIIssueBizMockRecorder) ListTodos(ctx interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListTodos", reflect.TypeOf((*MockIIssueBiz)(nil).ListTodos), ctx)
}
