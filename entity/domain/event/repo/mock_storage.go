// Code generated by MockGen. DO NOT EDIT.
// Source: storage.go

// Package repo is a generated GoMock package.
package repo

import (
	reflect "reflect"

	model "github.com/blackhorseya/monorepo-go/entity/domain/event/model"
	contextx "github.com/blackhorseya/monorepo-go/pkg/contextx"
	gomock "go.uber.org/mock/gomock"
)

// MockStorager is a mock of Storager interface.
type MockStorager struct {
	ctrl     *gomock.Controller
	recorder *MockStoragerMockRecorder
}

// MockStoragerMockRecorder is the mock recorder for MockStorager.
type MockStoragerMockRecorder struct {
	mock *MockStorager
}

// NewMockStorager creates a new mock instance.
func NewMockStorager(ctrl *gomock.Controller) *MockStorager {
	mock := &MockStorager{ctrl: ctrl}
	mock.recorder = &MockStoragerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockStorager) EXPECT() *MockStoragerMockRecorder {
	return m.recorder
}

// CreateRedPacket mocks base method.
func (m *MockStorager) CreateRedPacket(ctx contextx.Contextx, packet *model.RedPacket) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateRedPacket", ctx, packet)
	ret0, _ := ret[0].(error)
	return ret0
}

// CreateRedPacket indicates an expected call of CreateRedPacket.
func (mr *MockStoragerMockRecorder) CreateRedPacket(ctx, packet interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateRedPacket", reflect.TypeOf((*MockStorager)(nil).CreateRedPacket), ctx, packet)
}

// ListRedPacket mocks base method.
func (m *MockStorager) ListRedPacket(ctx contextx.Contextx, cond ListRedPacketCondition) ([]*model.RedPacket, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ListRedPacket", ctx, cond)
	ret0, _ := ret[0].([]*model.RedPacket)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ListRedPacket indicates an expected call of ListRedPacket.
func (mr *MockStoragerMockRecorder) ListRedPacket(ctx, cond interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListRedPacket", reflect.TypeOf((*MockStorager)(nil).ListRedPacket), ctx, cond)
}
