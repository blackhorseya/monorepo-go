// Code generated by MockGen. DO NOT EDIT.
// Source: interface.go

// Package biz is a generated GoMock package.
package biz

import (
	reflect "reflect"

	model "github.com/blackhorseya/monorepo-go/entity/ekko/domain/identity/model"
	model0 "github.com/blackhorseya/monorepo-go/entity/ekko/domain/workflow/model"
	contextx "github.com/blackhorseya/monorepo-go/pkg/contextx"
	gomock "go.uber.org/mock/gomock"
)

// MockIWorkflowBiz is a mock of IWorkflowBiz interface.
type MockIWorkflowBiz struct {
	ctrl     *gomock.Controller
	recorder *MockIWorkflowBizMockRecorder
}

// MockIWorkflowBizMockRecorder is the mock recorder for MockIWorkflowBiz.
type MockIWorkflowBizMockRecorder struct {
	mock *MockIWorkflowBiz
}

// NewMockIWorkflowBiz creates a new mock instance.
func NewMockIWorkflowBiz(ctrl *gomock.Controller) *MockIWorkflowBiz {
	mock := &MockIWorkflowBiz{ctrl: ctrl}
	mock.recorder = &MockIWorkflowBizMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockIWorkflowBiz) EXPECT() *MockIWorkflowBizMockRecorder {
	return m.recorder
}

// CreateTodo mocks base method.
func (m *MockIWorkflowBiz) CreateTodo(ctx contextx.Contextx, who *model.User, title string) (*model0.Ticket, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateTodo", ctx, who, title)
	ret0, _ := ret[0].(*model0.Ticket)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// CreateTodo indicates an expected call of CreateTodo.
func (mr *MockIWorkflowBizMockRecorder) CreateTodo(ctx, who, title interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateTodo", reflect.TypeOf((*MockIWorkflowBiz)(nil).CreateTodo), ctx, who, title)
}

// ListTodos mocks base method.
func (m *MockIWorkflowBiz) ListTodos(ctx contextx.Contextx, options ListTodosOptions) ([]*model0.Ticket, int, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ListTodos", ctx, options)
	ret0, _ := ret[0].([]*model0.Ticket)
	ret1, _ := ret[1].(int)
	ret2, _ := ret[2].(error)
	return ret0, ret1, ret2
}

// ListTodos indicates an expected call of ListTodos.
func (mr *MockIWorkflowBizMockRecorder) ListTodos(ctx, options interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListTodos", reflect.TypeOf((*MockIWorkflowBiz)(nil).ListTodos), ctx, options)
}
