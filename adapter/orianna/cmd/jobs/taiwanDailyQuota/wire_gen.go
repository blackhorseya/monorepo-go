// Code generated by Wire. DO NOT EDIT.

//go:generate go run github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package main

import (
	mongodb2 "github.com/blackhorseya/monorepo-go/app/orianna/domain/market/repo/stock/mongodb"
	"github.com/blackhorseya/monorepo-go/entity/orianna/domain/market/repo"
	"github.com/blackhorseya/monorepo-go/pkg/notify"
	"github.com/blackhorseya/monorepo-go/pkg/storage/mongodb"
	"github.com/blackhorseya/monorepo-go/pkg/transports/kafkax"
	"github.com/segmentio/kafka-go"
)

// Injectors from wire.go:

func BuildInjector() (*Injector, error) {
	notifier, err := notify.NewLineNotifier()
	if err != nil {
		return nil, err
	}
	writer, err := kafkax.NewWriter()
	if err != nil {
		return nil, err
	}
	client, err := mongodb.NewClient()
	if err != nil {
		return nil, err
	}
	iStockRepo, err := mongodb2.NewStockRepo(client)
	if err != nil {
		return nil, err
	}
	mainInjector := &Injector{
		notifier: notifier,
		writer:   writer,
		repo:     iStockRepo,
	}
	return mainInjector, nil
}

// wire.go:

// Injector is the injector for main.
type Injector struct {
	notifier notify.Notifier
	writer   *kafka.Writer
	repo     repo.IStockRepo
}
