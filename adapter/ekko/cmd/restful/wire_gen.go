// Code generated by Wire. DO NOT EDIT.

//go:generate go run github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package restful

import (
	"github.com/blackhorseya/monorepo-go/app/ekko/domain/workflow/biz"
	mongodb2 "github.com/blackhorseya/monorepo-go/app/ekko/domain/workflow/repo/issue/mongodb"
	"github.com/blackhorseya/monorepo-go/pkg/adapterx"
	"github.com/blackhorseya/monorepo-go/pkg/linebot"
	"github.com/blackhorseya/monorepo-go/pkg/storage/mongodb"
	"github.com/blackhorseya/monorepo-go/pkg/transports/httpx"
	"github.com/spf13/viper"
)

import (
	_ "github.com/blackhorseya/monorepo-go/adapter/ekko/api/docs"
)

// Injectors from wire.go:

func New(v *viper.Viper) (adapterx.Servicer, error) {
	server, err := httpx.NewServer()
	if err != nil {
		return nil, err
	}
	client, err := linebot.NewClient()
	if err != nil {
		return nil, err
	}
	mongoClient, err := mongodb.NewClient()
	if err != nil {
		return nil, err
	}
	iIssueRepo, err := mongodb2.NewIssueRepo(mongoClient)
	if err != nil {
		return nil, err
	}
	iWorkflowBiz, err := biz.NewWorkflowBiz(iIssueRepo)
	if err != nil {
		return nil, err
	}
	servicer := newService(server, client, iWorkflowBiz)
	return servicer, nil
}

func NewRestful() (adapterx.Restful, error) {
	server, err := httpx.NewServer()
	if err != nil {
		return nil, err
	}
	client, err := linebot.NewClient()
	if err != nil {
		return nil, err
	}
	mongoClient, err := mongodb.NewClient()
	if err != nil {
		return nil, err
	}
	iIssueRepo, err := mongodb2.NewIssueRepo(mongoClient)
	if err != nil {
		return nil, err
	}
	iWorkflowBiz, err := biz.NewWorkflowBiz(iIssueRepo)
	if err != nil {
		return nil, err
	}
	restful := newRestful(server, client, iWorkflowBiz)
	return restful, nil
}
