// Code generated by Wire. DO NOT EDIT.

//go:generate go run github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package main

import (
	"github.com/blackhorseya/monorepo-go/app/domain/shortening/biz"
	redis2 "github.com/blackhorseya/monorepo-go/app/domain/shortening/repo/redis"
	biz2 "github.com/blackhorseya/monorepo-go/entity/domain/shortening/biz"
	"github.com/blackhorseya/monorepo-go/pkg/linebot"
	"github.com/blackhorseya/monorepo-go/pkg/storage/redis"
	"github.com/blackhorseya/monorepo-go/pkg/transports/httpx"
	linebot2 "github.com/line/line-bot-sdk-go/v8/linebot"
)

// Injectors from wire.go:

func BuildInjector() (*Injector, error) {
	server, err := httpx.NewServer()
	if err != nil {
		return nil, err
	}
	client, err := linebot.NewClient()
	if err != nil {
		return nil, err
	}
	redisClient, err := redis.NewClient()
	if err != nil {
		return nil, err
	}
	storager, err := redis2.NewStorager(redisClient)
	if err != nil {
		return nil, err
	}
	iShorteningBiz := biz.NewShortening(storager)
	mainInjector := &Injector{
		server: server,
		bot:    client,
		svc:    iShorteningBiz,
	}
	return mainInjector, nil
}

// wire.go:

// Injector is the injector for the restful service.
type Injector struct {
	server *httpx.Server
	bot    *linebot2.Client
	svc    biz2.IShorteningBiz
}
